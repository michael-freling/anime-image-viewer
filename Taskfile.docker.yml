version: '3'

vars:
  APP_NAME: "anime-image-viewer"
  GO_VERSION: 1.23.4
  NODE_VERSION: 22.11

tasks:
  docker:build:all:
    summary: Builds all Docker images
    deps:
      - task: docker:build:wails3
    cmds:
      - for:
          matrix:
            OS: ["wsl", "linux"]
            ARCH: ["amd64"]
            ENV: ["prod", "debug"]
        task: docker:build
        vars:
          OS: '{{ .ITEM.OS }}'
          ARCH: '{{ .ITEM.ARCH }}'
          ENV: '{{ .ITEM.ENV }}'

  docker:build:wails3:
    summary: Builds the Docker image for Wails 3
    vars:
      # https://hub.docker.com/r/michaelfreling/wails
      BASE_TAG: 'michaelfreling/wails:3-go-{{ .GO_VERSION }}-node-{{ .NODE_VERSION }}'
    cmds:
      - cmd: |
          docker build \
            --tag {{ .BASE_TAG }} \
            --build-arg GO_VERSION={{ .GO_VERSION }} \
            --build-arg NODE_VERSION={{ .NODE_VERSION }} \
            --file Dockerfile.base \
            .

  docker:build:
    summary: Builds the Docker image
    vars:
      IMAGE_TAG: '{{ .APP_NAME }}-{{ .ENV }}:{{ .OS }}-{{ .ARCH }}'
      BINARY: '{{ .APP_NAME }}{{ if eq .OS "wsl" }}.exe{{ end }}'
      RESULT: '{{ .APP_NAME }}-{{ if eq .OS "wsl" }}windows{{ else }}{{ .OS }}{{ end }}-{{ .ARCH }}{{ if eq .OS "wsl" }}.exe{{ end }}'
    cmds:
      - |
          docker build \
            --tag {{ .IMAGE_TAG }} \
            --build-arg GO_VERSION={{ .GO_VERSION }} \
            --build-arg NODE_VERSION={{ .NODE_VERSION }} \
            --build-arg OS={{ .OS }} \
            --build-arg ARCH={{ .ARCH }} \
            --build-arg ENV={{ .ENV }} \
            .
      # Copy binary files from images into a local: https://stackoverflow.com/questions/48265608/is-it-possible-to-copy-a-file-out-of-a-docker-image-without-actually-running-the
      - mkdir -p ./dist/{{ .ENV }}
      - docker create --name {{ .APP_NAME }} {{ .IMAGE_TAG }}
      - defer: docker rm {{ .APP_NAME }}
      - docker cp {{ .APP_NAME }}:/app/bin/{{ .BINARY }} ./dist/{{ .ENV }}/{{ .RESULT }}

  docker:build:wsl:prod:amd64:
    summary: Builds the Docker image for WSL
    cmds:
      - task: docker:build
        vars:
          OS: 'wsl'
          ARCH: 'amd64'
          ENV: 'prod'

  docker:build:linux:prod:amd64:
    summary: Builds the Docker image for Linux
    cmds:
      - task: docker:build
        vars:
          OS: 'linux'
          ARCH: 'amd64'
          ENV: 'prod'
